apiVersion: batch/v1
kind: Job
metadata:
    name: {{ template "beam-simulation.job" . }}
    namespace: {{ .Values.global.namespace }}
    labels:
        app: {{ template "beam-simulation.job" . }}
        {{- include "beam-simulation.release_labels" . | indent 8 }}
spec:
    template:
        metadata:
            labels:
                app: {{ template "beam-simulation.job" . }}
                node: master
        spec:
            hostname: {{ .Values.job.hostname }}
            restartPolicy: Never

            volumes:
                - name: {{ .Values.volume.output.name }}
                  hostPath:
                      path: {{ .Values.volume.output.host }}
                - name: {{ .Values.volume.data.name }}
                  hostPath:
                      path: {{ .Values.volume.data.host }}

            imagePullSecrets:
                - name: {{ .Values.global.secret.docker }}

            containers:

                - name: simulation-{{ template "beam-simulation.job" . }}
                  image: {{ .Values.job.image }}:{{ .Values.job.imageTag }}
                  resources:
                      limits:
                          cpu: {{ sub .Values.global.resources.cpu 1 }}
                          memory: {{ printf "%dGi" ( sub .Values.global.resources.memory 1 ) | quote }}
                      requests:
                          cpu: {{ sub .Values.global.resources.cpu 2 }}
                          memory: {{ printf "%dGi" ( sub .Values.global.resources.memory 2 ) | quote }}
                  args: ["--config", {{ printf "%s/%s" .Values.volume.data.path .Values.job.config | quote }}, "--cluster-type", "master", "--node-host", {{ (include "beam-simulation.service" . ) | quote }}, "--node-port", "2552", "--seed-address", {{ printf "%s:2552" (include "beam-simulation.service" . ) | quote }}, "--use-local-worker", "true"]
                  imagePullPolicy: Always
                  env:
                      - name: BEAM_OUTPUT
                        value: {{ .Values.volume.output.path | quote }}
                      - name: JAVA_OPTS
                        value: '{{ printf "-Xmx%dG" ( sub .Values.global.resources.memory 2 ) | quote }} {{ printf "-Xmx%dG" ( div .Values.global.resources.memory 2 ) | quote }}'
                  ports:
                      # akka remoting
                      - name: {{ .Values.service.akkaPort.name | quote }}
                        containerPort: {{ .Values.service.akkaPort.port }}
                        protocol: TCP
                      - name: debug
                        containerPort: 5005
                        hostPort: 5005
                        protocol: TCP
                  volumeMounts:
                      - name: {{ .Values.volume.output.name }}
                        mountPath: {{ .Values.volume.output.path }}
                      - name: {{ .Values.volume.data.name }}
                        mountPath: {{ .Values.volume.data.path }}