apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ template "beam-simulation.worker.service" . }}
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "4"
    {{- include "beam-simulation.release_labels" . | indent 4 }}
  name: {{ template "beam-simulation.worker.service" . }}
  namespace: {{ template "beam-simulation.namespace" . }}
spec:
  clusterIP: {{ .Values.service.akkaPort.worker.type }}
  ports:
    - port: {{ .Values.service.akkaPort.worker.port }}
      name: {{ .Values.service.akkaPort.worker.name | quote }}
  selector:
    app: {{ template "beam-simulation.worker.job" . }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "beam-simulation.worker.set" . }}
  namespace: {{ template "beam-simulation.namespace" . }}
  labels:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "4"
    app: {{ template "beam-simulation.worker.set" . }}
    {{- include "beam-simulation.release_labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ template "beam-simulation.worker.job" . }}
  serviceName: {{ template "beam-simulation.worker.service" . }}
  replicas: {{ .Values.job.worker.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "beam-simulation.worker.job" . }}
        node: worker
    spec:
      hostname: {{ .Values.job.worker.hostname }}
      dnsPolicy: ClusterFirst

      volumes:
        - name: {{ .Values.volume.output.name }}
          emptyDir: {}
        - name: {{ .Values.volume.data.name }}
          hostPath:
            path: {{ .Values.volume.data.host }}

      imagePullSecrets:
        - name: {{ .Values.secret.docker }}

      containers:

        - name: {{ template "beam-simulation.worker.job.container" . }}
          image: {{ .Values.job.image }}:{{ .Values.job.imageTag }}
          resources:
            limits:
              cpu: "0.9"
              memory: 1Gi
            requests:
              cpu: "0.7"
              memory: 700Mi
          args: ["--config",  {{ printf "%s/beamville/beam.conf" .Values.volume.data.path | quote }}, "--cluster-type", "worker", "--node-host", "$HOSTNAME_VALUE", "--node-port", {{ .Values.service.akkaPort.worker.port | quote }}, "--seed-address", {{ printf "%s:%s" (include "beam-simulation.master.service" . ) .Values.service.akkaPort.master.port | quote }}]
          imagePullPolicy: Always
          env:
            - name: BEAM_OUTPUT
              value: {{ .Values.volume.output.path | quote }}
            - name: JAVA_OPTS
              value: '"-Xmx1G" "-Xms500m"'
            - name: HOSTNAME_COMMAND
              value: "ifconfig | grep \"inet addr:\" | awk  -F'[: ]+' '!/127/{print $$4}'"
          ports:
            # akka remoting
            - name: {{ .Values.service.akkaPort.worker.name | quote }}
              containerPort: {{ .Values.service.akkaPort.worker.port }}
              protocol: TCP
          volumeMounts:
            - name: {{ .Values.volume.output.name }}
              mountPath: {{ .Values.volume.output.path }}
            - name: {{ .Values.volume.data.name }}
              mountPath: {{ .Values.volume.data.path }}
